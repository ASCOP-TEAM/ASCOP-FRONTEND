import type { NextPage } from 'next';
import Head from 'next/head';
import { Main } from '@layout';
import { CartContext, CartItem } from '@contexts';
import { useContext } from 'react';
import { Container } from './styles';
import Image from 'next/image';
import React from 'react';
import { useRouter } from 'next/router';

const Carrinho: NextPage = () => {
  const [error, setError] = React.useState<boolean>(false);
  const router = useRouter();

  const context = useContext(CartContext);

  const handleAddToCart = (cartItem: CartItem, size: string) => {
    if (cartItem && size) {
      context?.updateToCart({
        item: cartItem.item,
        price: cartItem.item.attributes.price,
        quantity: cartItem.quantity,
        size: size,
      });
    }
  };

  const handleCheckout = () => {
    const checkCart = context?.cartItems.filter(
      (cart) => cart.item.attributes.sizes.length > 1 && cart.size === null,
    );

    if (checkCart?.length != 0) {
      return setError(true);
    }

    router.push('/loja/cliente');
  };

  return (
    <>
      <Head>
        <title>Loja</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Main>
        <section>
          <h1>Carrinho:</h1>
          <p>confirme os produtos e tamanhos para finalizar a compra</p>

          <Container>
            {context && (
              <>
                <ul className="list-products">
                  {context.cartItems.map((cart) => (
                    <li key={cart.item.id} className="select-products">
                      <div className="image">
                        <Image
                          width={100}
                          height={100}
                          src={
                            cart.item.attributes.thumbnail.data.attributes.url
                          }
                          alt="produto ASCOP"
                        />
                      </div>
                      <div>
                        <h3>{cart.item.attributes.title} </h3>
                        <p>valor: R${cart.item.attributes.price}</p>
                        {cart.item.attributes.sizes.length > 1 &&
                        cart.size == null ? (
                          <div className="variables">
                            <ul>
                              {cart.item.attributes.sizes.map((size, index) => (
                                <li
                                  key={index}
                                  onClick={() =>
                                    handleAddToCart(cart, size.variations)
                                  }
                                  style={{
                                    border: `3px solid ${error && 'red'}`,
                                  }}
                                >
                                  {size.variations}
                                </li>
                              ))}
                            </ul>
                          </div>
                        ) : (
                          <p>
                            tamanho:{' '}
                            {cart.size != null
                              ? cart.size
                              : cart.item.attributes.sizes.length > 1
                              ? 'N/I'
                              : 'UNICO'}
                          </p>
                        )}

                        <div>
                          <button onClick={() => context.addToCart(cart)}>
                            +
                          </button>
                          <p>{cart.quantity}</p>
                          <button onClick={() => context.removeFromCart(cart)}>
                            -
                          </button>
                        </div>
                      </div>
                      <div>
                        <p>R${cart.price}</p>
                      </div>
                    </li>
                  ))}
                </ul>

                <div className="prices">
                  <div className="items">
                    <h3>Items selecionados</h3>
                    <ul>
                      {context.cartItems.map((cart) => (
                        <li key={cart.item.id}>
                          <p>{cart.item.attributes.title}</p>
                          <p>{cart.quantity}</p>
                          <p>R$ {cart.price}</p>
                        </li>
                      ))}
                    </ul>
                  </div>

                  <div className="rodape">
                    {error && (
                      <p>
                        Por favor selecione o tamanhos dos produtos com valores
                        variaveis
                      </p>
                    )}
                    <div className="total my-2">
                      <h2>Total</h2>
                      <div>R$ {context.getCartTotal()}</div>
                    </div>

                    <div className="finalizar">
                      <button onClick={handleCheckout}>COMPRAR</button>
                    </div>
                  </div>
                </div>
              </>
            )}

            {!context && <p>Erro ao obter os dados do carrinho</p>}
          </Container>
        </section>
      </Main>
    </>
  );
};

export default Carrinho;
